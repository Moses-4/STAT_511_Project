---
title: "Project Part 3"
subtitle: "STAT 511"
author: "Moses Sanches, Shuyu Wang, Theodore Choi"
date: "`r Sys.Date()`"
output: 
  html_document:
    toc: true
    toc_float: true
    number_section: false
    highlight: tango
---

```{r}
#| label: setup
#| include: false
knitr::opts_chunk$set(echo = TRUE)

```

```{r}
#| message: false
# Libraries we used
library(openintro)
library(tidyverse)
library(dplyr)
library(broom)
library(ggplot2)
library(corrplot)
library(GGally)
library(glue)
library(ggpubr)
library(olsrr)
library(MASS)
library(cowplot)

```


```{r}

# import data
filepath_2013 <- "./data/longevity Data Cleaned Version 2013.rds"

life_exp_2013 <- readRDS(filepath_2013)

# show the top rows of the dataframe
head(life_exp_2013)

```


## Part A – continuous predictors
### 1. Produce a scatterplot matrix and the correlation matrix for all continuous predictors and the response variable.

```{r}
# dataframe of continuous columns
# other numerical variables seem to be counts (some based on per 1000, but still count nonetheless)
life_exp_2013_cont <- life_exp_2013[,c('longevity',
                                       'alcohol',
                                       'perc_exp',
                                       'bmi',
                                       'tot_exp',
                                       'aids',
                                       'gdp',
                                       'thin_1_19',
                                       'thin_5_9',
                                       'inc_comp',
                                       'school')]

# Scatterplot matrix of the data
pairs(life_exp_2013_cont,
      upper.panel = NULL,
      labels = names(life_exp_2013_cont))

# correlation matrix of the data
corr_matrix <- ggpairs(life_exp_2013_cont,
                       upper = list(continuous = wrap('cor', size = 3))) + 
                       theme(axis.text.x = element_text(angle = 90, hjust = 1))

print(corr_matrix)

```

##### a. Which variables appear most related to the response?
> It seems that Income Composition of Resources (Corr: 0.891) and Schooling (Corr: 0.795) are most related to the response. HIV AIDS (Corr: -0.622) also seems to be related to the response

##### b. Is there the potential of an issue with predictor (x) variables that are highly correlated (which variables)?
> Thinness of Ages 1 to 19 and Thinness of Ages 5 to 9 seem to be quite correlated/possibly colinear (Corr: 0.925). Income Composition of Resources and Schooling also seem to be correlated/possibly colinear (Corr: 0.913). Percent Expenditure on Health as a Percentage of GDP and GDP also seem highly correlated/possibly colinear (Corr: 0.918).


### 2. For EACH predictor separately (one at a time), fit the SLR model and note the significance of the predictor.

##### a. Using your exploratory analysis in Project Part 2 and the scatterplot you created above, you may choose to transform the x variable now if there is a very strong and clear choice of non-linear function. If so, refit the SLR model with the transformed predictor and note the significance.

```{r}
# assign column names to variable
colnames_lifeexp <- names(life_exp_2013_cont)[-1]

# credit to: https://stackoverflow.com/questions/59161144/creating-a-loop-through-a-list-of-variables-for-an-lm-model-in-r
# assign list of models to variable
list_formulas <- lapply(paste("longevity ~", colnames_lifeexp), as.formula)

# apply linear model function to the list of variables
list_lm_life_exp <- lapply(list_formulas, function(x) lm(x, data = life_exp_2013))

# apply augment function to the list of linear models
list_aug_life_exp <- lapply(list_lm_life_exp, function(x) augment(x))

# assigning the summaries of the linear model iterable as an iterable to a variable
list_lm_life_exp_summ <- lapply(list_lm_life_exp, summary)

list_ftestfit <- lapply(list_lm_life_exp, function(x) ols_pure_error_anova(x))



# iterating through the columns to get p-values and linearity assumption plots
# creating a range for iteration
my_range <- 1:length(colnames_lifeexp)

# outputting relevant plots
for (i in my_range)
  {
  # get the p value of the independent variable
  print(glue('The p value for longevity vs {colnames_lifeexp[i]} is {signif(tidy(list_lm_life_exp_summ[[i]])[2,5], 3)}'))
  
  
  
  # get the p value of the independent variable
  print(glue('Plots to determine linear assumptions of {colnames_lifeexp[i]}'))
  
  # Linearity, Equal Variance
  p1 <- ggplot(data = list_aug_life_exp[[i]],
               aes(y = .resid,
                   x = .fitted)) +
        geom_point() +
        labs(title = glue('Residuals vs Fitted for {colnames_lifeexp[i]}'),
                  x = colnames_lifeexp[i],
                  y = ".resid") +
        theme_minimal()
  
  # Normality
  p2 <- ggplot(data = list_aug_life_exp[[i]],
               aes(sample = .resid)) +    
        geom_qq_line() +
        geom_qq() +
        labs(title = glue('QQ of Residuals vs {colnames_lifeexp[i]}'),
                  x = 'Theoretical',
                  y = "Sample") +
        theme_minimal()
  
  # Outliers
  p3 <- ggplot(data = list_aug_life_exp[[i]], aes(x = .resid)) +    
        geom_boxplot() + 
        labs(title = glue('Boxplot of Residuals for longevity vs {colnames_lifeexp[i]}'),
                  x = 'Theoretical',
                  y = "Sample") +
        theme_minimal()
  
  print(plot_grid(p1, p2, p3, nrow = 2))
  }

```
> It seems that most of the SLR models comparing the response to the numerical predictors produce a small p value.

> There seems to be the most non-normality for alcohol

###### alcohol
```{r}

life_exp_2013 <- life_exp_2013 %>%
  mutate(alcohol_trnsfrm = alcohol^(1/4))

life_exp_2013 <- life_exp_2013 %>%
  mutate(longevity_squared = longevity^2)

alcohol_lm <- lm(longevity_squared ~ alcohol_trnsfrm, life_exp_2013)

alcohol_aug_lm <- augment(alcohol_lm)

ggplot(data = alcohol_aug_lm,
             aes(y = .resid,
                x = .fitted)) +    
      geom_point() +
      labs(title = 'Residuals vs alcohol') +
      theme_minimal()

 ggplot(data = alcohol_aug_lm,
             aes(sample = .resid)) +    
      geom_qq_line() +
      geom_qq() +
      labs(title = 'QQ of alcohol',
           x = 'Theoretical',
           y = "Sample") +
      theme_minimal()

boxcox(alcohol_lm)

```
> The p value for the transformed longevity vs transformed alcohol is `r signif(tidy(summary(alcohol_lm))[2,5], 3)`

###### perc_exp
```{r}

life_exp_2013 <- life_exp_2013 %>%
  mutate(perc_exp_trnsfrm = sqrt(log(perc_exp)))

life_exp_2013 <- life_exp_2013 %>%
  mutate(longevity_squared = longevity^(2))

perc_exp_lm <- lm(longevity_squared ~ perc_exp_trnsfrm, life_exp_2013)

perc_exp_aug_lm <- augment(perc_exp_lm)

ggplot(data = perc_exp_aug_lm,
       aes(y = .resid,
           x = .fitted)) +    
  geom_point() +
  labs(title = 'Residuals vs perc_exp') +
  theme_minimal()

ggplot(data = perc_exp_aug_lm,
         aes(sample = .resid)) +    
  geom_qq_line() +
  geom_qq() +
  labs(title = 'QQ of perc_exp',
       x = 'Theoretical',
       y = "Sample") +
  theme_minimal()

boxcox(perc_exp_lm)

```
> The p value for longevity vs the transformed perc_exp is `r signif(tidy(summary(perc_exp_lm))[2,5], 3)`

###### bmi
```{r}

life_exp_2013 <- life_exp_2013 %>%
  mutate(bmi_trnsfrm = bmi^(2))

life_exp_2013 <- life_exp_2013 %>%
  mutate(longevity_squared = longevity^(2))

bmi_lm <- lm(longevity_squared ~ bmi_trnsfrm, life_exp_2013)

bmi_aug_lm <- augment(bmi_lm)

ggplot(data = bmi_aug_lm,
               aes(y = .resid,
                   x = .fitted)) +    
        geom_point() +
        labs(title = 'Residuals vs bmi') +
        theme_minimal()

ggplot(data = bmi_aug_lm,
               aes(sample = .resid)) +    
        geom_qq_line() +
        geom_qq() +
        labs(title = 'QQ of bmi',
                  x = 'Theoretical',
                  y = "Sample") +
        theme_minimal()

boxcox(bmi_lm)

```
> The p value for longevity vs the transformed bmi is `r signif(tidy(summary(bmi_lm))[2,5], 3)`

###### tot_exp
```{r}

life_exp_2013 <- life_exp_2013 %>%
  mutate(tot_exp_trnsfrm = tot_exp^(1/2))

life_exp_2013 <- life_exp_2013 %>%
  mutate(longevity_squared = longevity^(1))

tot_exp_lm <- lm(longevity_squared ~ tot_exp_trnsfrm, life_exp_2013)

tot_exp_aug_lm <- augment(tot_exp_lm)

ggplot(data = tot_exp_aug_lm,
               aes(y = .resid,
                   x = .fitted)) +    
        geom_point() +
        labs(title = 'Residuals vs tot_exp') +
        theme_minimal()

ggplot(data = tot_exp_aug_lm,
               aes(sample = .resid)) +    
        geom_qq_line() +
        geom_qq() +
        labs(title = 'QQ of tot_exp',
                  x = 'Theoretical',
                  y = "Sample") +
        theme_minimal()

boxcox(tot_exp_lm)

```
> The p value for longevity vs the transformed tot_exp is `r signif(tidy(summary(tot_exp_lm))[2,5], 3)`

###### aids
```{r}

life_exp_2013 <- life_exp_2013 %>%
  mutate(aids_trnsfrm = sqrt(log(aids)), na.rm = TRUE)

life_exp_2013 <- life_exp_2013 %>%
  mutate(longevity_squared = longevity^(1))

aids_lm <- lm(longevity_squared ~ aids_trnsfrm, life_exp_2013)

aids_aug_lm <- augment(aids_lm)

ggplot(data = aids_aug_lm,
               aes(y = .resid,
                   x = .fitted)) +    
        geom_point() +
        labs(title = 'Residuals vs aids') +
        theme_minimal()

ggplot(data = aids_aug_lm,
               aes(sample = .resid)) +    
        geom_qq_line() +
        geom_qq() +
        labs(title = 'QQ of aids',
                  x = 'Theoretical',
                  y = "Sample") +
        theme_minimal()

boxcox(aids_lm)

```
> The p value for longevity vs the transformed aids is `r signif(tidy(summary(aids_lm))[2,5], 3)`

###### gdp
```{r}

life_exp_2013 <- life_exp_2013 %>%
  mutate(gdp_trnsfrm = sqrt(log(gdp)))

life_exp_2013 <- life_exp_2013 %>%
  mutate(longevity_squared = longevity^(2))

gdp_lm <- lm(longevity_squared ~ gdp_trnsfrm, life_exp_2013)

gdp_aug_lm <- augment(gdp_lm)

ggplot(data = gdp_aug_lm,
               aes(y = .resid,
                   x = .fitted)) +    
        geom_point() +
        labs(title = 'Residuals vs gdp') +
        theme_minimal()

ggplot(data = gdp_aug_lm,
               aes(sample = .resid)) +    
        geom_qq_line() +
        geom_qq() +
        labs(title = 'QQ of gdp',
                  x = 'Theoretical',
                  y = "Sample") +
        theme_minimal()

boxcox(gdp_lm)

```
> The p value for transformed longevity vs the transformed gdp is `r signif(tidy(summary(gdp_lm))[2,5], 3)`

###### thin_1_19
```{r}

life_exp_2013 <- life_exp_2013 %>%
  mutate(thin_1_19_trnsfrm = sqrt(thin_1_19))

life_exp_2013 <- life_exp_2013 %>%
  mutate(longevity_squared = longevity^(2))

thin_1_19_lm <- lm(longevity_squared ~ thin_1_19_trnsfrm, life_exp_2013)

thin_1_19_aug_lm <- augment(thin_1_19_lm)

ggplot(data = thin_1_19_aug_lm,
               aes(y = .resid,
                   x = .fitted)) +    
        geom_point() +
        labs(title = 'Residuals vs thin_1_19') +
        theme_minimal()

ggplot(data = thin_1_19_aug_lm,
               aes(sample = .resid)) +    
        geom_qq_line() +
        geom_qq() +
        labs(title = 'QQ of thin_1_19',
                  x = 'Theoretical',
                  y = "Sample") +
        theme_minimal()

boxcox(thin_1_19_lm)

```
> The p value for transformed longevity vs the transformed thin_1_19 is `r signif(tidy(summary(thin_1_19_lm))[2,5], 3)`


###### thin_5_9
```{r}

life_exp_2013 <- life_exp_2013 %>%
  mutate(thin_5_9_trnsfrm = sqrt(thin_5_9))

life_exp_2013 <- life_exp_2013 %>%
  mutate(longevity_squared = longevity^(2))

thin_5_9_lm <- lm(longevity_squared ~ thin_5_9_trnsfrm, life_exp_2013)

thin_5_9_aug_lm <- augment(thin_5_9_lm)

ggplot(data = thin_5_9_aug_lm,
               aes(y = .resid,
                   x = .fitted)) +    
        geom_point() +
        labs(title = 'Residuals vs thin_5_9') +
        theme_minimal()

ggplot(data = thin_5_9_aug_lm,
               aes(sample = .resid)) +    
        geom_qq_line() +
        geom_qq() +
        labs(title = 'QQ of thin_5_9',
                  x = 'Theoretical',
                  y = "Sample") +
        theme_minimal()

boxcox(thin_5_9_lm)

```
> The p value for transformed longevity vs the transformed thin_5_9 is `r signif(tidy(summary(thin_5_9_lm))[2,5], 3)`


> We will transform the dataset as follows:

```{r}

# dataframe of continuous columns
# other numerical variables seem to be counts (some based on per 1000, but still count nonetheless)
life_exp_2013_tfm <- life_exp_2013[,c('longevity_squared',
                                      'alcohol_trnsfrm',
                                      'perc_exp_trnsfrm',
                                      'bmi_trnsfrm',
                                      'tot_exp_trnsfrm',
                                      'aids_trnsfrm',
                                      'gdp_trnsfrm',
                                      'thin_1_19_trnsfrm',
                                      'thin_5_9_trnsfrm',
                                      'inc_comp',
                                      'school')]

head(life_exp_2013_tfm)

```



## Part B – categorical predictors
### 1. For EACH categorical predictor separately (one at a time), fit a SLR model
```{r}
life_exp_2013$country.f <- factor(life_exp_2013$country)
is.factor(life_exp_2013$country.f)
```

```{r}
country.lm <- lm(longevity ~ life_exp_2013$country.f, data=life_exp_2013)
summary(country.lm)
```

```{r}
# the year column was removed due to our having selected the year 2013 to analyze
# however, this is what we would have done had there been more years

# year.lm <- lm(longevity ~ year, data = life_exp)
# summary(year.lm)
```

```{r}
status.lm <- lm(longevity ~ status, data = life_exp_2013)
summary(status.lm)
```

##### a. Be sure the categorical variable is stored as a “factor” variable.
```{r}
life_exp_2013$country.f <- factor(life_exp_2013$country)
is.factor(life_exp_2013$country.f)
```

##### b. Use the overall F-test to note the significance of the variable.

> After looking at the summary for the country, status, and year categorical variables, The F-test of overall significance indicates that the linear regression model provides a better fit to the data than a model that contains no independent variables. This was concluded becuase the p value is less than the t value. 

##### c. Look at the individual t-tests in the summary output and consider whether some levels of the categorical variable are not “statistically” different from one another. Combining this with the plots and tables you created in Project Part 2, are there categories you might “collapse” (combine)? The decision to combine could also be impacted by the amount of data in the categories. If there are many categories determine which categories to collapse at this stage (consider whether the categories make sense to combine too!). If not many categories, just make note of the possible need to collapse later in the model building process.

```{r}
life_exp_2013 %>%
  count(country, name = "CountByCou", sort = TRUE)
```
> The country variable would be a variable we would consider collapsing as there are too many categories within. With over 180 countries, it is difficult to make a simple regression model and obtain other statistics.

## Part C – Preliminary summary
### Provide a brief (1 paragraph) summary of your findings so far. Some things to comment on:
##### • What variables appear to be associated with your outcome of interest?
> Some of the variables are associated with our outcome of interest and some of them are not. According to our scatterplot graphs in part 1 and part 2, Percentage Expenditure, BMI, HIV.Aids, GDP, thinness5.9.years, Income.composition.of.resources, and Schooling appear to be associated with our outcome of interest. However, some of them are linearly associated with thee outcome, some of them are curvely associated, and some of them seems to be associated but hard to see any clear model. For example, BMI, Income, and Schooling are having linear relationship; Percentage Expenditure, HIV, and GDP are having curve relationship; thinness is the one that's not clear.

##### • Do you anticipate using any non-linear terms for any of these predictors (i.e. did you employ any x transformations)?
> We are probably going to use non-linear terms for Percentage Expenditure, HIV, and GDP since they are not showing linear relationship with Longevity right now.

##### • Are there any of your predictor variables that you think might interact with one another? Note – this is not a statistical question but rather asks you to reflect on the substantive knowledge/intuition you have about the context of your data and research question.
> We do think that some of our predictor variables might interact with one other, and actually we have already discovered some of this kind of relationship. For example in part B in project part 2, we found that Measles is closely related to infant deaths and deaths under 5 years. And based on the current situation of our society, I think some of the predictors is going to affect each other such as percentage expenditure and income, income and GDP, Schooling and GDP, etc.
