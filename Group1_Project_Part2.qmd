---
title: "Project Part 1"
subtitle: "STAT 511"
author: "Moses Sanches, Shuyu Wang, Theodore Choi"
date: "`r Sys.Date()`"
output: 
  html_document:
    toc: true
    toc_float: true
    number_section: false
    highlight: tango
---

```{r}
#| label: setup
#| include: false
knitr::opts_chunk$set(echo = TRUE)
```

# Project Part 1

```{r}
#| message: false
# Libraries we used
library(openintro)
library(tidyverse)
library(broom)
library(pastecs)
library(countrycode)
```

## Part A
#### Specify the research question you want to investigate using this data.  
> - Do demographics affect life expectancy?

## Part B
#### Document any initial data cleaning steps you take â€“ e.g. changing variable names, converting 
characters to factors, etc.

```{r}
# load data (must have file in correct project folder)
life_exp <- read.csv("./data/Life Expectancy Data.csv")

# add continent to dataset
# https://stackoverflow.com/questions/47510141/get-continent-name-from-country-name-in-r
life_exp$continent <- countrycode(sourcevar = life_exp[,"Country"],
                                  origin = "country.name",
                                  destination = "continent")

# Change Variable names for ease of use - including changing to lowercase
life_exp <- life_exp %>% 
  rename(
    country = Country,
    year = Year,
    status = Status,
    longevity = Life.expectancy,
    adult_mort = Adult.Mortality,
    inf_death = infant.deaths,
    perc_exp = percentage.expenditure,
    hep_b = Hepatitis.B,
    measles = Measles,
    bmi = BMI,
    u5_deaths = under.five.deaths,
    polio = Polio,
    tot_exp = Total.expenditure,
    dipth = Diphtheria,
    aids = HIV.AIDS,
    gdp = GDP,
    pop = Population,
    thin_1_19 = thinness..1.19.years,
    thin_5_9 = thinness.5.9.years,
    inc_comp = Income.composition.of.resources,
    school = Schooling
  )

# change character columns to factors
life_exp <- as.data.frame(unclass(life_exp), stringsAsFactors = TRUE)

# check classes to see if the changes held
sapply(life_exp, class)

# set the response variable to the Life.expectancy column as y
# this may not be necessary, but was done preemptively for the linear model
y <- life_exp$longevity

# remove the response variable from the dataframe and assign to x
# this may not be necessary, but was done preemptively for the linear model
x <- life_exp[,-4]

# check summary to determine if there are nulls
summary(y)

# remove the null values
life_exp1 <- life_exp[complete.cases(life_exp$longevity),]

# check for nulls
summary(life_exp1$longevity)
```
> Seems like the rows where the response variable was null have been removed


