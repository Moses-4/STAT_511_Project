---
title: "Project Part 4"
subtitle: "STAT 511"
author: "Moses Sanches, Shuyu Wang, Theodore Choi"
date: "`r Sys.Date()`"
format: 
  html:
    self-contained: true
    toc: true
    toc_float: true
    number-section: false
    highlight: tango
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
#| include: false
knitr::opts_chunk$set(echo = TRUE)

```

```{r}
#| message: false
#| warning: false
# Libraries we used
library(openintro)
library(tidyverse)
library(dplyr)
library(scales)
library(leaps)
library(MASS)
library(olsrr)
```

```{r}

# import data
filepath_2013 <- "./data/Longevity Data Year 2013 Cleaned Transformed.rds"

life_exp_pt4 <- readRDS(filepath_2013)

# show top rows
head(life_exp_pt4)

# life_exp_pt4[,2:21]

```

## Part A -- Preliminary Main effects model

### 1. Using the results from project part 3 as a starting point, determine the set of P-1 predictor variables under consideration.

```{r}

# find why alcohol has dense area in plot:
# count values
table(life_exp_pt4$alcohol_trnsfrm)[1]

```

> Based on examination of the alcohol, we can conclude that many countries reported 0.1 liters of pure alcohol consumed per capita

##### a. Make sure all variables have been transformed appropriately, as necessary.

##### b. You should combine levels of categorical variables at this step if necessary.


```{r}
# scaling certain columns to keep them within magnitude
list_to_scale <- c(3, 6, 9, 10, 11, 12, 13, 14, 15)
life_exp_pt4[list_to_scale] <- lapply(life_exp_pt4[list_to_scale], function(x) c(scale(x)))

# did not end up imputing nulls, instead will just use na.omit()
# # impute nulls
# # https://stackoverflow.com/questions/20364450/find-names-of-columns-which-contain-missing-values
# cols_w_null <- names(which(colSums(is.na(life_exp_pt4)) > 0))
# null_range <- 1:length(cols_w_null)
# my_range <- 1:19
#
# for (i in null_range)
#   {
#   life_exp_pt4[cols_w_null[i]][is.na(life_exp_pt4[cols_w_null[i]])] <- median(life_exp_pt4[cols_w_null[i]], na.rm = TRUE)
#   }
#
# # scaling data
# for (i in my_range)
#   {
#   life_exp_pt4[i] <-
#     rescale_max(life_exp_pt4[i])
# }
#
#
# # check if columns contain any null values - sum should be 0 if no nulls
# # https://www.geeksforgeeks.org/how-to-check-missing-values-in-r-dataframe/
# sum(is.na(life_exp_pt4))

```

> Did not scale as we had null values that were not imputed

### 2. Fit a main effects (no interactions) model with the full set of P-1 predictors

```{r}

# fitting the full model
# FullModel <- lm(longevity ~ ., data = life_exp_pt4[,-6])
FullModel <- lm(longevity ~ ., data = life_exp_pt4)

```

### 3. Show the summary table for this "preliminary main effects model"

```{r}

# checking model
summary(FullModel)

```
> The variables (P-1) in the full model are: alcohol_trnsfrm, bmi_trnsfrm, tot_exp_trnsfrm, aids_trnsfrm, gdp_trnsfrm, thin_1_19_trnsfrm, inc_comp, adult_mort, hep_b_trnsfrm, measles_trnsfrm, u5_deaths_trnsfrm, polio_trnsfrm, dipth_trnsfrm, pop_trnsfrm, continentAmericas, continentAsia, continentEurope, continentOceania, statusDeveloping

## Part B -- Model Selection Procedures

### 4. Conduct 2-3 model selection procedures (e.g. "best subsets" algorithm, stepwise forward/backward) to determine a few candidates for a "best" model

##### a. You do not need to include all the output in your report (i.e. use echo = FALSE and eval = FALSE in code chunks as necessary)

```{r}
#| echo: false
# Stepwise Backwards/Forward/Both Regression
Base <- lm(longevity ~ 1, data = na.omit(life_exp_pt4))
FullModel <- lm(longevity ~ ., data = na.omit(life_exp_pt4))

step(Base, scope = list(upper = FullModel, lower = Base),
     direction = "forward", trace = FALSE)

step(FullModel, direction = "backward", trace = FALSE)

step(Base, scope = list(upper = FullModel, lower = Base), direction = "both", trace = TRUE)
```

### Cp model

```{r}
# # commented out due to error in leaps
# Cp_best <- leaps(x = life_exp_pt4[,2:21], y = life_exp_pt4$longevity,
#              method = "Cp", nbest = 1)
#
# # Cp_best <- leaps(x = life_exp_2013[,2:3], y = life_exp_2013$longevity,
# #              method = "Cp", nbest = 1)
#
# Cp_best <- data.frame(Cp_best$which,
#                       num_in_model = Cp_best$size - 1,
#                       p = Cp_best$size,
#                           Cp = Cp_best$Cp)
# Cp_best
#
# ggplot(Cp_best, aes(x = num_in_model, y = Cp)) +
#   geom_point() +
#   theme_minimal()

# regfit.full <- regsubsets(longevity ~ ., data = life_exp_pt4)
# plot(regfit.full, scale = "Cp")
```

##### b. Report a few models that are candidates for "best" model and discuss their similarities and differences (e.g. what variables get included every time, which variables end up in some models but not others)

> From the stepwise foward and backward regression model as well as the best subset regression model, the adult mortality and alcohol trnsfrm variables are the only ones present in the three models constructed. This is good indication that they will be included to construct the best model. Variables tot_exp_trnsfrm, thin_5\_9_trnsfrm, and measles_trnsfrm were some that probably wont be used to decide the best model. This is due to them not being in all three models and they were eliminated in the backwards refression model. According to the Cp Best model, we will most likely choose from row 11 or 12 as those have a Cp close to the number of variables while having a relatively low number of variables used in the model

##### c. For any of these "best" models, do any indicator variables need to be added back in? I.e. did only some levels of a categorical variable make it in? Do the categories need to be collapsed or re-leveled in any way? Adapt the models as necessary.

> After looking at the models, it doesnt look like any indicator variables need to be added in or adjusted, since no catergorical variable levels are missing. Releveling would not do much as the only ordered categorical variable was the status column, but that column only had 2 options (developed, developing)

### 5. Among the variables deemed important, determine whether you will add any pairwise interactions to the model. This should be based off of substantive knowledge of the data & research question. For each interaction of interest, fit a full model (with the interactions) and the reduced model (without interactions) and conduct an F test to determine whether it should be included.

```{r}
# Full/Reduced Models
# check interactions btwn adult mortality and alcohol
adult_mort_red <- lm(longevity ~ adult_mort + alcohol_trnsfrm, data = na.omit(life_exp_pt4))

adult_mort_int <- lm(longevity ~ adult_mort * alcohol_trnsfrm, data = na.omit(life_exp_pt4))

anova(adult_mort_red, adult_mort_int)

```

```{r}
# # Full/Reduced Models
# # check interactions btwn inf death and continent
# inf_death_trnsfrm_red <- lm(longevity ~ inf_death_trnsfrm + continent, data = na.omit(life_exp_pt4))
# 
# inf_death_trnsfrm_int <- lm(longevity ~ inf_death_trnsfrm * continent, data = na.omit(life_exp_pt4))
# 
# anova(inf_death_trnsfrm_red, inf_death_trnsfrm_int)
```

```{r}
# Full/Reduced Models
# check interactions btwn aids and continent
aids_death_trnsfrm_red <- lm(longevity ~ aids_trnsfrm + continent, data = na.omit(life_exp_pt4))

aids_death_trnsfrm_int <- lm(longevity ~ aids_trnsfrm * continent, data = na.omit(life_exp_pt4))

anova(aids_death_trnsfrm_red, aids_death_trnsfrm_int)

```

> We may consider adding adult mortality and alcohol as it had a p-value of less than 0.05, but other than that it is not likely that we will be doing pairwise interactions.

### 6. Based on your results in Step 5 & 6 and substantive knowledge about the dataset, select a preliminary "best" model. Show the summary output for this model and write out the regression equation.

```{r}

# choosing between a model and a model with possible interaction
# this is from step("both")
m1 <- lm(formula = longevity ~ inc_comp + aids_trnsfrm + tot_exp_trnsfrm + 
         adult_mort + thin_1_19_trnsfrm, data = na.omit(life_exp_pt4))

summary(m1)

m2 <- lm(formula = longevity ~ inc_comp + aids_trnsfrm + tot_exp_trnsfrm +
           thin_1_19_trnsfrm + adult_mort * alcohol_trnsfrm,
         data = na.omit(life_exp_pt4))

summary(m2)

```

> We will use m1 as our model since the interaction did not help the model

> $\hat{y_i}$ = 53.1917 + 31.9814 x inc_comp + -6.5966 x aids_trnsfrm + 1.4210 x tot_exp_trnsfrm + -1.0755 x adult_mort + -1.7804 x thin_1_19_trnsfrm

## Part C -- Preliminary summary

### Provide a brief (1 paragraph) summary of your findings so far. Some things to comment on:

##### • What variables appear to be associated with your outcome of interest?

##### • How much variation in Y does your set of predictor variables explain?

##### • Interpret some of the parameters of interest

> According to our regression models, inc_comp, aids_trnsfrm, tot_exp_trnsfrm, adult_mort, and thin_1_19_trnsfrm are the variables that are most asscociated with out outcome of interest. It makes sense that adult mortality will affect life expectancy. It seems that more education (schooling was correlated with income composition) and wealth can afford healthier lifestyles. Seeing how income composition (according to the Human Development Index in terms of income composition of resources - https://www.kaggle.com/datasets/kumarajarshi/life-expectancy-who?resource=download) is so positively correlated with longevity, real world knowledge of the impact of wealth on health is evident. With greater dissemination of technology and information comes the expectation of longer life. In terms of Total Expenditure (which is the government's spending on health), we can see that the more a government spends, the greater the longevity. Mortal diseases such as aids will definitely have a negative impact on longevity as the disease tends to cut life short. Thinness from ages 1-19 will also impact the life expectancy as we can most likely assume that it measures some form of undernourishment. Adult mortality is definitely going to negatively impact longevity as a higher death rate can point to shorter lifespans. The predictor variables explain 86.22% of the variation in Y according to the adjusted $R^2$

```{r}
# # Exporting Dataset
# life_exp_pt4_fact <- life_exp_pt4[,c('continent.f', 'status.f')]
#
# # assign transformed columns to variable
# life_exp_pt4_tfm <- cbind(life_exp_pt4_tfm_num, life_exp_pt4_fact)
#
# # rearrange data
# life_exp_pt4_tfm <- life_exp_pt4_tfm[, c(19, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
#                                            12, 13, 14, 15, 16, 17, 18, 20, 21)]
#
# # output dataframe
# head(life_exp_pt4_tfm)
#
# # assign filepaths to variables
# filepath_2013_tfm <- "./data/longevity Data Cleaned Version 2013 TFM.rds"
#
# # save to csv
# saveRDS(life_exp_pt4_tfm, filepath_2013_tfm)
```
